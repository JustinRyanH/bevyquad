use miniquad::KeyCode;

use crate::input::{ButtonState, KeyboardInput};

pub(crate) fn set_keyboard(input: &mut KeyboardInput, keycode: KeyCode, state: ButtonState) {
    match keycode {
        KeyCode::Space => input.space = state,
        KeyCode::Apostrophe => todo!(),
        KeyCode::Comma => todo!(),
        KeyCode::Minus => todo!(),
        KeyCode::Period => todo!(),
        KeyCode::Slash => todo!(),
        KeyCode::Key0 => todo!(),
        KeyCode::Key1 => todo!(),
        KeyCode::Key2 => todo!(),
        KeyCode::Key3 => todo!(),
        KeyCode::Key4 => todo!(),
        KeyCode::Key5 => todo!(),
        KeyCode::Key6 => todo!(),
        KeyCode::Key7 => todo!(),
        KeyCode::Key8 => todo!(),
        KeyCode::Key9 => todo!(),
        KeyCode::Semicolon => todo!(),
        KeyCode::Equal => todo!(),
        KeyCode::A => todo!(),
        KeyCode::B => todo!(),
        KeyCode::C => todo!(),
        KeyCode::D => todo!(),
        KeyCode::E => todo!(),
        KeyCode::F => todo!(),
        KeyCode::G => todo!(),
        KeyCode::H => todo!(),
        KeyCode::I => todo!(),
        KeyCode::J => todo!(),
        KeyCode::K => todo!(),
        KeyCode::L => todo!(),
        KeyCode::M => todo!(),
        KeyCode::N => todo!(),
        KeyCode::O => todo!(),
        KeyCode::P => todo!(),
        KeyCode::Q => todo!(),
        KeyCode::R => todo!(),
        KeyCode::S => todo!(),
        KeyCode::T => todo!(),
        KeyCode::U => todo!(),
        KeyCode::V => todo!(),
        KeyCode::W => todo!(),
        KeyCode::X => todo!(),
        KeyCode::Y => todo!(),
        KeyCode::Z => todo!(),
        KeyCode::LeftBracket => todo!(),
        KeyCode::Backslash => todo!(),
        KeyCode::RightBracket => todo!(),
        KeyCode::GraveAccent => todo!(),
        KeyCode::World1 => todo!(),
        KeyCode::World2 => todo!(),
        KeyCode::Escape => input.escape = state,
        KeyCode::Enter => todo!(),
        KeyCode::Tab => input.tab = state,
        KeyCode::Backspace => todo!(),
        KeyCode::Insert => todo!(),
        KeyCode::Delete => todo!(),
        KeyCode::Right => todo!(),
        KeyCode::Left => todo!(),
        KeyCode::Down => todo!(),
        KeyCode::Up => todo!(),
        KeyCode::PageUp => todo!(),
        KeyCode::PageDown => todo!(),
        KeyCode::Home => todo!(),
        KeyCode::End => todo!(),
        KeyCode::CapsLock => todo!(),
        KeyCode::ScrollLock => todo!(),
        KeyCode::NumLock => todo!(),
        KeyCode::PrintScreen => todo!(),
        KeyCode::Pause => todo!(),
        KeyCode::F1 => todo!(),
        KeyCode::F2 => todo!(),
        KeyCode::F3 => todo!(),
        KeyCode::F4 => todo!(),
        KeyCode::F5 => todo!(),
        KeyCode::F6 => todo!(),
        KeyCode::F7 => todo!(),
        KeyCode::F8 => todo!(),
        KeyCode::F9 => todo!(),
        KeyCode::F10 => todo!(),
        KeyCode::F11 => todo!(),
        KeyCode::F12 => todo!(),
        KeyCode::F13 => todo!(),
        KeyCode::F14 => todo!(),
        KeyCode::F15 => todo!(),
        KeyCode::F16 => todo!(),
        KeyCode::F17 => todo!(),
        KeyCode::F18 => todo!(),
        KeyCode::F19 => todo!(),
        KeyCode::F20 => todo!(),
        KeyCode::F21 => todo!(),
        KeyCode::F22 => todo!(),
        KeyCode::F23 => todo!(),
        KeyCode::F24 => todo!(),
        KeyCode::F25 => todo!(),
        KeyCode::Kp0 => todo!(),
        KeyCode::Kp1 => todo!(),
        KeyCode::Kp2 => todo!(),
        KeyCode::Kp3 => todo!(),
        KeyCode::Kp4 => todo!(),
        KeyCode::Kp5 => todo!(),
        KeyCode::Kp6 => todo!(),
        KeyCode::Kp7 => todo!(),
        KeyCode::Kp8 => todo!(),
        KeyCode::Kp9 => todo!(),
        KeyCode::KpDecimal => todo!(),
        KeyCode::KpDivide => todo!(),
        KeyCode::KpMultiply => todo!(),
        KeyCode::KpSubtract => todo!(),
        KeyCode::KpAdd => todo!(),
        KeyCode::KpEnter => todo!(),
        KeyCode::KpEqual => todo!(),
        KeyCode::LeftShift => input.left_shift = state,
        KeyCode::LeftControl => input.left_ctrl = state,
        KeyCode::LeftAlt => input.left_alt = state,
        KeyCode::LeftSuper => todo!(),
        KeyCode::RightShift => input.right_shift = state,
        KeyCode::RightControl => input.right_ctrl = state,
        KeyCode::RightAlt => input.right_alt = state,
        KeyCode::RightSuper => todo!(),
        KeyCode::Menu => todo!(),
        KeyCode::Unknown => {}
    }
}
